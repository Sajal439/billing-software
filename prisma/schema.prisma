// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Item {
  id      String @id @default(uuid())
  price   Float  @default(0)
  currQty Float  @default(0)

  unitId String
  unit   Unit   @relation(fields: [unitId], references: [id], name: "PrimaryUnit")

  altUnitId         String?
  altUnit           Unit?   @relation(fields: [altUnitId], references: [id], name: "AltUnit")
  altUnitConversion Float?

  packaginUnitId          String?
  packagingUnit           Unit?   @relation(fields: [packaginUnitId], references: [id], name: "PackagingUnit")
  packagingUnitConversion Float?
}

model Unit {
  id           String @id @default(uuid())
  name         String
  items        Item[] @relation("PrimaryUnit")
  altItems     Item[] @relation("AltUnit")
  packingItems Item[] @relation("PackagingUnit")
}

model Account {
  id             String        @id @default(uuid())
  name           String
  mobile         String
  address        String
  currentBalance Float         @default(0)
  transactions   Transaction[] @relation("AccountTransaction")
}

model Party {
  id           Int           @id @default(autoincrement())
  name         String
  mobile       String?
  address      String?
  transactions Transaction[]
}

model Transaction {
  id          String   @id @default(uuid())
  date        DateTime
  description String
  debit       Float
  credit      Float
  partyId     Int
  party       Party    @relation(fields: [partyId], references: [id])

  Account Account[] @relation("AccountTransaction")
}
